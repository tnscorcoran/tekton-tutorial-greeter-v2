---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: cloud-native-app-serverless
  namespace: openshift #<.>
  labels:
    app.kubernetes.io/instance: tekton-tutorial-greeter
    app.kubernetes.io/name: tekton-tutorial-greeter
    pipeline.openshift.io/runtime: java #<.>
    pipeline.openshift.io/type: knative #<.>
spec:
  description: >-
    The Pipeline to build and deploy the Hello World Java App https://github.com/redhat-scholars/tekton-tutorial-greeter as Knative Service.
  params:
    - name: IMAGE_NAME
      description: >-
        The fully qualified image name e.g example.com/tekton-tutorial/greeter
      default: image-registry.openshift-image-registry.svc:5000/tektontutorial/greeter
    - name: APP_PROFILE
      description: >-
        The application profile to use for building the application. In this example it should be either:
          * quarkus
          * springboot
    - name: APP_NAME #<.>
      description: The Knative Service name
    - name: GITHUB_REPO_URL
      description: The GitHub Repo of the Java Application
      default: https://github.com/redhat-scholars/tekton-tutorial-greeter
    - name: GITHUB_REPO_REVISION
      description: The GitHub revision to use
      default: master
  workspaces:
    - name: source
    - name: maven-settings
  tasks:
    - name: clone-sources
      taskRef:
        name: git-clone
        kind: ClusterTask
      params:
        - name: url
          value: $(params.GITHUB_REPO_URL)
        - name: revision
          value: $(params.GITHUB_REPO_REVISION)
        # just to do a fresh clone, as we already have the directory cloned
        # to reuse it we can exlude this step
        - name: deleteExisting
          value: 'true'
      workspaces:
        - name: output
          workspace: source
    - name: build-java-test
      taskRef:
        name: maven
        kind: ClusterTask
      runAfter:
        - clone-sources
      params:
        - name: GOALS
          value:
            - '-pl'
            - $(params.APP_PROFILE)
            - -B
            - 'clean'
            - 'test'
      workspaces:
        - name: maven-settings
          workspace: maven-settings
        - name: source
          workspace: source
    - name: build-java-app
      taskRef:
        name: maven
        kind: ClusterTask
      runAfter:
        - build-java-test
      params:
        - name: GOALS
          value:
            - '-pl'
            - $(params.APP_PROFILE)
            - -B
            - '-DskipTests'
            - 'clean'
            - 'package'
      workspaces:
        - name: maven-settings
          workspace: maven-settings
        - name: source
          workspace: source
    - name: build-java-app-image
      taskRef:
        name: buildah
        kind: ClusterTask
      runAfter:
        - build-java-app
      params:
        - name: CONTEXT
          value: '$(params.APP_PROFILE)'
        - name: IMAGE
          value: '$(params.IMAGE_NAME)'
        # needed for OpenShift buildah run as vfs is the default storage driver
        - name: STORAGE_DRIVER
          value: vfs
        # since pushing to internal registry we skip TLS verify
        - name: TLSVERIFY
          value: 'false'
      workspaces:
        - name: source
          workspace: source
    - name: deploy-kn-service
      taskRef:
        name: kn
        kind: ClusterTask
      runAfter:
        - build-java-app-image
      params:
        - name: ARGS
          value:
            - 'service'
            - 'create'
            - '$(params.APP_NAME)'
            - '--force'
            - '--image=$(params.IMAGE_NAME)@$(tasks.build-java-app-image.results.IMAGE_DIGEST)' #<.>
